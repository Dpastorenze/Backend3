# Proyecto de Mocking y Logger en Node.js

Este proyecto demuestra cómo generar dinámicamente usuarios y productos para ser guardados en MongoDB, y cómo configurar entornos de desarrollo y producción con un logger de Winston.

## Requisitos Previos

- Node.js (versión 16 o superior)
- MongoDB
- Docker (opcional, para ejecutar en contenedores)

## Instalación

1. Clona el repositorio:

   ```bash
   git clone https://github.com/tu-usuario/proyecto-mocking-logger.git
   cd proyecto-mocking-logger

2. Instalacion dependencias  
npm install

3.Configura las variables de entorno

 .Crea un archivo .env.prod para entorno de producción
 
    Ejemplo de .env
    PORT=numero de puerto
    MONGO_LINK=mongodb://<usuario>:<contraseña>@<host>:<puerto>/<nombre-base-datos>
    

4.Ejecuta el servidor en la terminal con las lineas 
npm start

5.Ejecuta las siguientes rutas para generar MOCkS
    
    .POST /api/mocks/:users/:products: Genera :users usuarios y :products productos.
    .GET /api/users: Devuelve todos los usuarios generados.
    .GET /api/products: Devuelve todos los productos generados.

Ejemplo en terminal (recomendable cmd o Git Bash)

    curl -X POST http://localhost:8080/api/mocks/10/20

#### DOCKER
1.Construye la imagen Docker:
    docker build -t proyectoback .
2.Ejecuta el contenedor Docker:
    docker run -p 8080:9000 --name "nombre de contenedor" proyectback

### Scrips
- `npm start`: Inicia el servidor en modo producción.

        PORT=9000
        JWT_PRIVATE_KEY=thesecret
        MONGO_LINK="mongodb+srv://ProductionProyect:prod123@proyectmongo.fxmzi.mongodb.net/"


- `npm run dev`: Inicia el servidor en modo desarrollo.

        PORT=8080
        MONGO_LINK=mongodb+srv://       dep2024:123456prueba@proyectmongo.fxmzi.    mongodb.net/
        JWT_PRIVATE_KEY=thesecret
